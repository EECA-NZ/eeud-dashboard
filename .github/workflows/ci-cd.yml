name: CI/CD

on:
   push:
      branches:
         - main
      tags:
         - "v*.*.*"

jobs:
   deploy-dev:
      if: ${{ ! startsWith(github.ref, 'refs/tags/v') }}
      runs-on: ubuntu-latest
      concurrency:
         group: deploy-dev
         cancel-in-progress: true
      steps:
         - uses: actions/checkout@v4

         - name: Set up Python 3.9
           uses: actions/setup-python@v5
           with:
              python-version: "3.9.13" # Specific version required by shinyapps.io

         - name: Install dependencies
           run: |
              python -m pip install -r requirements.txt

         - name: Install Quarto
           run: |
              wget https://quarto.org/download/latest/quarto-linux-amd64.deb
              sudo dpkg -i quarto-linux-amd64.deb

         - name: Replace secrets placeholders
           run: |
               sed -i "s|__PENDO_API_KEY__|${PENDO_API_KEY}|g" www/pendo-analytics.html
               sed -i "s|__HEAP_API_KEY__|${HEAP_API_KEY}|g" www/heap-analytics.html
               sed -i "s|__GOOGLE_API_KEY__|${GOOGLE_API_KEY}|g" www/google-analytics.html
           env:
              PENDO_API_KEY: ${{ secrets.PENDO_API_KEY }}
              HEAP_API_KEY: ${{ secrets.HEAP_API_KEY }}
              GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}

         - name: Build the app
           run: |
              quarto render index.qmd

         - name: Run the app
           run: |
              timeout 10s shiny run app.py || ( [[ $? -eq 124 ]] )

         - name: Configure deployment tool
           run: |
              rsconnect add \
                --account $SHINYAPPS_NAME \
                --name $SHINYAPPS_NAME \
                --token $SHINYAPPS_TOKEN \
                --secret $SHINYAPPS_SECRET
           env:
              SHINYAPPS_NAME: ${{ secrets.SHINYAPPS_NAME }}
              SHINYAPPS_TOKEN: ${{ secrets.SHINYAPPS_TOKEN }}
              SHINYAPPS_SECRET: ${{ secrets.SHINYAPPS_SECRET }}

         - name: Deploy to Development
           run: |
              rsconnect deploy shiny . \
                --name  "$SHINYAPPS_NAME" \
                --app-id "$DEV_APP_ID"
           env:
              SHINYAPPS_NAME: ${{ secrets.SHINYAPPS_NAME }}
              DEV_APP_ID: ${{ secrets.DEV_APP_ID }}

   deploy-prod:
      if: ${{ startsWith(github.ref, 'refs/tags/v') }}
      runs-on: ubuntu-latest
      concurrency:
         group: deploy-prod
         cancel-in-progress: true
      steps:
         - uses: actions/checkout@v4

         - name: Set up Python 3.9
           uses: actions/setup-python@v5
           with:
              python-version: "3.9.13" # Specific version required by shinyapps.io

         - name: Install dependencies
           run: |
              python -m pip install -r requirements.txt

         - name: Install Quarto
           run: |
              wget https://quarto.org/download/latest/quarto-linux-amd64.deb
              sudo dpkg -i quarto-linux-amd64.deb

         - name: Build the app
           run: |
              quarto render index.qmd

         - name: Configure deployment tool
           run: |
              rsconnect add \
                --account $SHINYAPPS_NAME \
                --name $SHINYAPPS_NAME \
                --token $SHINYAPPS_TOKEN \
                --secret $SHINYAPPS_SECRET
           env:
              SHINYAPPS_NAME: ${{ secrets.SHINYAPPS_NAME }}
              SHINYAPPS_TOKEN: ${{ secrets.SHINYAPPS_TOKEN }}
              SHINYAPPS_SECRET: ${{ secrets.SHINYAPPS_SECRET }}

         - name: Extract tag name
           id: tag
           run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

         - name: Deploy to Production
           run: |
              RELEASE_VERSION="${RELEASE_VERSION//./-}"
              rsconnect deploy shiny . \
                --name "$SHINYAPPS_NAME" \
                --title "eeud-dashboard-quarto_$RELEASE_VERSION"
           env:
              SHINYAPPS_NAME: ${{ secrets.SHINYAPPS_NAME }}
              RELEASE_VERSION: ${{ env.RELEASE_VERSION }}
